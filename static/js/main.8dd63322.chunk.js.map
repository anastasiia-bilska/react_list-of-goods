{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleLengthSortClick","setState","LENGTH","handleNameSortClick","ALPHABET","handleReverseClick","handleResetClick","this","goods","visibleGoods","sort","a","b","length","localeCompare","reverse","getReorderedGoods","isResetVisible","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,sBAAwB,WACtB,EAAKC,SAAS,CACZH,SAAUL,EAASS,UARzB,EAYEC,oBAAsB,WACpB,EAAKF,SAAS,CACZH,SAAUL,EAASW,YAdzB,EAkBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,iBAAmB,WACjB,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAhEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKL,EAASS,OACZ,OAAOS,EAAEE,OAASD,EAAEC,OAEtB,KAAKpB,EAASW,SACZ,OAAOO,EAAEG,cAAcF,GAEzB,QACE,OAAO,MAINf,EACHY,EAAaM,UACbN,EA0CYO,CAAkBtB,EAAiBa,KAAKX,OAEhDqB,EAAiBpB,GAAcC,IAAaL,EAASM,KAE3D,OACE,sBAAKmB,UAAU,sBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYtB,IAAaL,EAASW,WAGtCiB,QAASd,KAAKJ,oBAPhB,iCAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYtB,IAAaL,EAASS,SAGtCmB,QAASd,KAAKP,sBAPhB,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAavB,IAClDwB,QAASd,KAAKF,mBAHhB,qBAQCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,iBAHhB,sBAUJ,oBAAIY,UAAU,OAAd,SACE,6BACGV,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAtFtC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8dd63322.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleLengthSortClick = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleNameSortClick = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isResetVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content box\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleNameSortClick}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleLengthSortClick}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', { 'is-light': !isReversed })}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {isResetVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleResetClick}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul className=\"list\">\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}